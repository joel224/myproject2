{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/staff/patients/new/page.tsx"],"sourcesContent":["\n// src/app/staff/patients/new/page.tsx\n'use client';\n\nimport { useState, type FormEvent, ChangeEvent, useRef } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, FileText, ShieldAlert, HeartPulse, Droplets, Info, Wind, Plus, X, Trash2 } from 'lucide-react';\nimport Image from 'next/image';\n\ninterface FormDataState {\n  name: string;\n  email: string;\n  phone: string;\n  dateOfBirth: string;\n  age: string; \n  medicalRecords: string;\n  xrayImageUrls: string[];\n  hasDiabetes: boolean;\n  hasHighBloodPressure: boolean;\n  hasStrokeOrHeartAttackHistory: boolean;\n  hasBleedingDisorders: boolean;\n  hasAllergy: boolean;\n  allergySpecifics: string;\n  hasAsthma: boolean;\n  password?: string; \n}\n\nexport default function AddNewPatientPage() {\n  const router = useRouter();\n  const { toast } = useToast();\n  const xrayInputRef = useRef<HTMLInputElement>(null);\n\n  const initialFormData: FormDataState = {\n    name: '',\n    email: '',\n    phone: '',\n    dateOfBirth: '',\n    age: '',\n    medicalRecords: '',\n    xrayImageUrls: [],\n    hasDiabetes: false,\n    hasHighBloodPressure: false,\n    hasStrokeOrHeartAttackHistory: false,\n    hasBleedingDisorders: false,\n    hasAllergy: false,\n    allergySpecifics: '',\n    hasAsthma: false,\n    password: '',\n  };\n\n  const [formData, setFormData] = useState<FormDataState>(initialFormData);\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errors, setErrors] = useState<Partial<Record<keyof FormDataState, string>>>({});\n  const [showUploadOrClearMessage, setShowUploadOrClearMessage] = useState(false);\n\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value, type } = e.target;\n    if (type === 'checkbox') {\n      const { checked } = e.target as HTMLInputElement;\n      setFormData(prev => ({ ...prev, [name]: checked }));\n       if (name === 'hasAllergy' && !checked) {\n        setFormData(prev => ({ ...prev, allergySpecifics: '' }));\n      }\n    } else {\n      setFormData(prev => ({ ...prev, [name]: value }));\n    }\n    if (errors[name as keyof FormDataState]) {\n      setErrors(prev => ({ ...prev, [name]: undefined }));\n    }\n  };\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const newFiles = Array.from(e.target.files);\n      setSelectedFiles(prevFiles => [...prevFiles, ...newFiles]);\n      setShowUploadOrClearMessage(true);\n       if (xrayInputRef.current) {\n        xrayInputRef.current.value = ''; \n      }\n    }\n  };\n\n  const removeSelectedFile = (indexToRemove: number) => {\n    setSelectedFiles(prevFiles => {\n      const updatedFiles = prevFiles.filter((_, index) => index !== indexToRemove);\n      if (updatedFiles.length === 0) {\n        setShowUploadOrClearMessage(false);\n      }\n      return updatedFiles;\n    });\n  };\n  \n  const removeUploadedImage = (urlToRemove: string) => {\n    setFormData(prev => ({\n      ...prev,\n      xrayImageUrls: (prev.xrayImageUrls || []).filter(url => url !== urlToRemove)\n    }));\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<Record<keyof FormDataState, string>> = {};\n    if (!formData.name.trim()) {\n        newErrors.name = \"Name is required.\";\n    } else if (formData.name.trim().length < 2) {\n        newErrors.name = \"Name must be at least 2 characters.\";\n    }\n\n    if (!formData.email.trim()) {\n        newErrors.email = \"Email is required.\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n        newErrors.email = \"Email is invalid.\";\n    }\n\n    if (formData.age && isNaN(parseInt(formData.age))) {\n        newErrors.age = \"Age must be a number.\";\n    } else if (formData.age && parseInt(formData.age) < 0) {\n        newErrors.age = \"Age cannot be negative.\";\n    }\n    \n    if (formData.password && formData.password.length > 0 && formData.password.length < 6) {\n        newErrors.password = \"Password must be at least 6 characters long.\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!validateForm()) {\n      toast({ variant: \"destructive\", title: \"Validation Error\", description: \"Please correct the errors in the form.\"});\n      return;\n    }\n    \n    setIsSubmitting(true);\n    let currentXrayImageUrls = [...formData.xrayImageUrls];\n\n    if (selectedFiles.length > 0) {\n      setIsUploading(true);\n      const uploadedUrlsThisรอบ: string[] = [];\n      let uploadOk = true;\n      try {\n        for (const file of selectedFiles) {\n          const fileData = new FormData();\n          fileData.append('imageFile', file);\n          const response = await fetch('/api/upload/image', { method: 'POST', body: fileData });\n          const result = await response.json();\n          if (!response.ok) throw new Error(result.message || `File upload failed for ${file.name}`);\n          uploadedUrlsThisรอบ.push(result.imageUrl);\n        }\n        currentXrayImageUrls = [...currentXrayImageUrls, ...uploadedUrlsThisรอบ];\n        setSelectedFiles([]); \n        setShowUploadOrClearMessage(false);\n        toast({ title: \"Files Uploaded\", description: `${uploadedUrlsThisรอบ.length} file(s) have been successfully uploaded and attached.` });\n      } catch (error: any) {\n        toast({ variant: \"destructive\", title: \"Upload Error\", description: error.message });\n        uploadOk = false;\n      } finally {\n        setIsUploading(false);\n      }\n      if (!uploadOk) {\n        setIsSubmitting(false); \n        return; \n      }\n    }\n    \n    const patientDataToSubmit = {\n      name: formData.name.trim(),\n      email: formData.email.trim(),\n      phone: formData.phone.trim() === '' ? undefined : formData.phone.trim(),\n      dateOfBirth: formData.dateOfBirth.trim() === '' ? undefined : formData.dateOfBirth.trim(),\n      age: formData.age ? parseInt(formData.age, 10) : undefined,\n      medicalRecords: formData.medicalRecords.trim() === '' ? undefined : formData.medicalRecords.trim(),\n      xrayImageUrls: currentXrayImageUrls,\n      hasDiabetes: formData.hasDiabetes,\n      hasHighBloodPressure: formData.hasHighBloodPressure,\n      hasStrokeOrHeartAttackHistory: formData.hasStrokeOrHeartAttackHistory,\n      hasBleedingDisorders: formData.hasBleedingDisorders,\n      hasAllergy: formData.hasAllergy,\n      allergySpecifics: formData.hasAllergy ? (formData.allergySpecifics.trim() === '' ? undefined : formData.allergySpecifics.trim()) : undefined,\n      hasAsthma: formData.hasAsthma,\n      password: formData.password && formData.password.trim() !== '' ? formData.password.trim() : undefined,\n    };\n\n    try {\n      const response = await fetch('/api/patients', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(patientDataToSubmit),\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        let errorMessage = data.message || \"Failed to add patient\";\n        if (data.errors && typeof data.errors === 'object') {\n            const fieldErrors = Object.values(data.errors as Record<string, string[]>).flat().join('; ');\n            if (fieldErrors) errorMessage = `${data.message}: ${fieldErrors}`;\n        }\n        throw new Error(errorMessage);\n      }\n\n      toast({ title: \"Patient Added!\", description: `${data.name} has been successfully added.` });\n      setFormData(initialFormData);\n      setSelectedFiles([]);\n      setShowUploadOrClearMessage(false);\n      setErrors({});\n      // router.push('/staff/patients'); // Optional redirect\n    } catch (err: any) {\n      toast({ variant: \"destructive\", title: \"Error Adding Patient\", description: err.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6 mb-12\">\n      <Card className=\"w-full max-w-2xl mx-auto shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl\">Add New Patient</CardTitle>\n          <CardDescription>Fill in the patient's details and medical information.</CardDescription>\n        </CardHeader>\n        <form onSubmit={handleSubmit}>\n          <CardContent className=\"space-y-6\">\n            <div className=\"grid sm:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">Full Name</Label>\n                <Input id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} placeholder=\"Patient's full name\" />\n                {errors.name && <p className=\"text-sm text-destructive\">{errors.name}</p>}\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input id=\"email\" name=\"email\" type=\"email\" value={formData.email} onChange={handleChange} placeholder=\"patient@example.com\" />\n                {errors.email && <p className=\"text-sm text-destructive\">{errors.email}</p>}\n              </div>\n            </div>\n             <div className=\"grid sm:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"phone\">Phone Number</Label>\n                <Input id=\"phone\" name=\"phone\" type=\"tel\" value={formData.phone} onChange={handleChange} placeholder=\"Optional\" />\n              </div>\n               <div className=\"space-y-2\">\n                <Label htmlFor=\"dateOfBirth\">Date of Birth</Label>\n                <Input id=\"dateOfBirth\" name=\"dateOfBirth\" type=\"date\" value={formData.dateOfBirth} onChange={handleChange} placeholder=\"Optional\" />\n              </div>\n            </div>\n            <div className=\"grid sm:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"age\">Age</Label>\n                <Input id=\"age\" name=\"age\" type=\"number\" value={formData.age} onChange={handleChange} placeholder=\"Optional\" />\n                 {errors.age && <p className=\"text-sm text-destructive\">{errors.age}</p>}\n              </div>\n                <div className=\"space-y-2\">\n                    <Label htmlFor=\"password\">Set Password (Optional)</Label>\n                    <Input \n                        id=\"password\" \n                        name=\"password\" \n                        type=\"password\" \n                        value={formData.password || ''} \n                        onChange={handleChange} \n                        placeholder=\"Min. 6 characters if set\" \n                    />\n                    {errors.password && <p className=\"text-sm text-destructive\">{errors.password}</p>}\n                    <p className=\"text-xs text-muted-foreground\">If provided, the patient can use this to log into their portal.</p>\n                </div>\n            </div>\n\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"medicalRecords\">Simple Medical Records / Notes</Label>\n              <Textarea id=\"medicalRecords\" name=\"medicalRecords\" value={formData.medicalRecords} onChange={handleChange} placeholder=\"Brief medical history, current medications, etc.\" rows={3} />\n            </div>\n\n            <div className=\"space-y-4\">\n              <Label className=\"font-semibold\">Medical Conditions:</Label>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-3\">\n                {[\n                  { id: 'hasDiabetes', label: 'Diabetes', icon: <HeartPulse className=\"h-4 w-4 mr-2\" /> },\n                  { id: 'hasHighBloodPressure', label: 'High Blood Pressure', icon: <ShieldAlert className=\"h-4 w-4 mr-2\" /> },\n                  { id: 'hasStrokeOrHeartAttackHistory', label: 'History of Stroke/Heart Attack', icon: <HeartPulse className=\"h-4 w-4 mr-2\" /> },\n                  { id: 'hasBleedingDisorders', label: 'Bleeding Disorders', icon: <Droplets className=\"h-4 w-4 mr-2\" /> },\n                  { id: 'hasAllergy', label: 'Allergy', icon: <Info className=\"h-4 w-4 mr-2\" /> },\n                  { id: 'hasAsthma', label: 'Asthma/Respiratory Issues', icon: <Wind className=\"h-4 w-4 mr-2\" /> },\n                ].map(condition => (\n                  <div key={condition.id} className=\"flex items-center space-x-2\">\n                    <Checkbox \n                      id={condition.id} \n                      name={condition.id}\n                      checked={formData[condition.id as keyof FormDataState] as boolean} \n                      onCheckedChange={(checked) => {\n                        const isChecked = typeof checked === 'boolean' ? checked : false;\n                        setFormData(prev => ({ ...prev, [condition.id]: isChecked }));\n                        if (condition.id === 'hasAllergy' && !isChecked) {\n                            setFormData(prev => ({ ...prev, allergySpecifics: '' }));\n                        }\n                      }}\n                    />\n                    <Label htmlFor={condition.id} className=\"flex items-center cursor-pointer text-sm\">\n                        {condition.icon} {condition.label}\n                    </Label>\n                  </div>\n                ))}\n              </div>\n              {formData.hasAllergy && (\n                <div className=\"space-y-1 pl-6\">\n                  <Label htmlFor=\"allergySpecifics\">Allergy Specifics</Label>\n                  <Input id=\"allergySpecifics\" name=\"allergySpecifics\" value={formData.allergySpecifics} onChange={handleChange} placeholder=\"e.g., Penicillin, Latex\" />\n                </div>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"xrayImagesInput\">X-ray Images or PDFs (Optional)</Label>\n              <div className=\"flex items-center gap-2\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => xrayInputRef.current?.click()}>\n                  <Plus className=\"h-4 w-4\" /> Add Files\n                </Button>\n                <Input \n                  id=\"xrayImagesInput\"\n                  type=\"file\" \n                  multiple \n                  onChange={handleFileChange} \n                  className=\"hidden\"\n                  ref={xrayInputRef}\n                  accept=\"image/jpeg,image/png,image/webp,image/gif,application/pdf\" \n                />\n              </div>\n\n              {selectedFiles.length > 0 && (\n                <div className=\"mt-2 space-y-1\">\n                  <p className=\"text-xs text-muted-foreground\">Selected files to upload ({selectedFiles.length}):</p>\n                  <div className=\"flex flex-wrap gap-2 mt-1\">\n                    {selectedFiles.map((file, index) => (\n                      <div key={index} className=\"relative group w-20 h-20 rounded border p-1 flex items-center justify-center\">\n                        {file.type.startsWith('image/') ? (\n                            <Image src={URL.createObjectURL(file)} alt={file.name} layout=\"fill\" objectFit=\"contain\" className=\"rounded\" data-ai-hint=\"medical scan document\" />\n                        ) : (\n                            <FileText className=\"h-10 w-10 text-muted-foreground\" />\n                        )}\n                        <Button\n                          type=\"button\"\n                          variant=\"destructive\"\n                          size=\"icon\"\n                          className=\"absolute -top-2 -right-2 h-5 w-5 opacity-0 group-hover:opacity-100 transition-opacity z-10\"\n                          onClick={() => removeSelectedFile(index)}\n                          aria-label=\"Remove selected file\"\n                        >\n                          <Trash2 className=\"h-3 w-3\" />\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {formData.xrayImageUrls.length > 0 && (\n                <div className=\"mt-2 space-y-1\">\n                  <p className=\"text-xs text-muted-foreground\">Current attachments:</p>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {formData.xrayImageUrls.map((url, index) => (\n                      <div key={index} className=\"relative h-20 w-20 rounded border group p-1 flex items-center justify-center\">\n                        {url.toLowerCase().endsWith('.pdf') ? (\n                            <FileText className=\"h-10 w-10 text-destructive\" />\n                        ) : (\n                            <Image src={url} alt={`Uploaded file ${index + 1}`} layout=\"fill\" objectFit=\"contain\" className=\"rounded\" data-ai-hint=\"medical scan document\" />\n                        )}\n                        <Button\n                            type=\"button\"\n                            variant=\"destructive\"\n                            size=\"icon\"\n                            className=\"absolute top-0 right-0 h-5 w-5 opacity-0 group-hover:opacity-100 transition-opacity z-10\"\n                            onClick={() => removeUploadedImage(url)}\n                            aria-label=\"Remove file\"\n                        >\n                            <Trash2 className=\"h-3 w-3\" />\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex flex-col sm:flex-row justify-between items-center gap-3 pt-4\">\n            <Button variant=\"outline\" type=\"button\" onClick={() => router.back()} disabled={isSubmitting || isUploading}>\n              Cancel\n            </Button>\n            <Button className=\"w-full sm:w-auto\" type=\"submit\" disabled={isSubmitting || isUploading || showUploadOrClearMessage}>\n              {isSubmitting || isUploading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <FileText className=\"mr-2 h-4 w-4\" />}\n              Add Patient\n            </Button>\n          </CardFooter>\n            {showUploadOrClearMessage && (\n                <p className=\"text-xs text-destructive text-center mt-2 px-6\">\n                    You have files selected. They will be uploaded when you click \"Add Patient\". <br/> Or, remove them from the selection above if you don't want to include them.\n                </p>\n            )}\n        </form>\n      </Card>\n    </div>\n  );\n}\n    \n\n    "],"names":[],"mappings":"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","debugId":null}}]
}