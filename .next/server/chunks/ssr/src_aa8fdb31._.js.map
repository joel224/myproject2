{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/doctor/patients/%5BpatientId%5D/page.tsx"],"sourcesContent":["\n'use client'\n\nimport type { TreatmentPlan, ProgressNote, Procedure, Appointment, Patient, StaffMember } from '@/lib/types';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { CalendarIcon, FileTextIcon, ClipboardListIcon, Edit3, PlusCircle, Image as ImageIcon, Trash2, DollarSign, Clock, AlertTriangle, ArrowLeft } from 'lucide-react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useSearchParams, useParams, useRouter } from 'next/navigation';\nimport { useEffect, useState, type FormEvent, ChangeEvent, useCallback } from 'react';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport { Loader2 } from 'lucide-react';\n\nexport default function PatientDetailPage() {\n  const params = useParams();\n  const patientId = params.patientId as string;\n  const searchParams = useSearchParams();\n  const router = useRouter();\n  const routerAppointmentId = searchParams.get('appointment');\n  const { toast } = useToast();\n\n  const [patient, setPatient] = useState<Patient | null>(null);\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n  const [treatmentPlans, setTreatmentPlans] = useState<TreatmentPlan[]>([]);\n  const [progressNotes, setProgressNotes] = useState<ProgressNote[]>([]);\n  const [staffList, setStaffList] = useState<StaffMember[]>([]);\n  \n  const [activeTab, setActiveTab] = useState('treatment-plans');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Fetch patient data\n      const patientRes = await fetch(`/api/patients/${patientId}`);\n      if (!patientRes.ok) {\n        const errData = await patientRes.json();\n        throw new Error(errData.message || `Failed to fetch patient (status: ${patientRes.status})`);\n      }\n      const patientData: Patient = await patientRes.json();\n      setPatient(patientData);\n\n      // Fetch related data\n      const [appointmentsRes, treatmentPlansRes, progressNotesRes, staffRes] = await Promise.all([\n        fetch(`/api/appointments?patientId=${patientId}`),\n        fetch(`/api/patients/${patientId}/treatment-plans`),\n        fetch(`/api/patients/${patientId}/progress-notes`),\n        fetch(`/api/staff?role=Dentist&role=Hygienist`) // Fetch doctors/hygienists\n      ]);\n\n      if (!appointmentsRes.ok) throw new Error('Failed to fetch appointments');\n      setAppointments(await appointmentsRes.json());\n\n      if (!treatmentPlansRes.ok) throw new Error('Failed to fetch treatment plans');\n      setTreatmentPlans(await treatmentPlansRes.json());\n\n      if (!progressNotesRes.ok) throw new Error('Failed to fetch progress notes');\n      setProgressNotes(await progressNotesRes.json());\n\n      if (!staffRes.ok) throw new Error('Failed to fetch staff list');\n      setStaffList(await staffRes.json());\n\n\n      if (routerAppointmentId) {\n        setActiveTab('appointments');\n      }\n\n    } catch (err: any) {\n      console.error(\"Error fetching patient data:\", err);\n      setError(err.message || \"An unexpected error occurred.\");\n      toast({ variant: \"destructive\", title: \"Error\", description: err.message });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [patientId, toast, routerAppointmentId]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n\n  // CRUD Handlers - Call fetchData() on success to refresh\n  const handleAddOrUpdateTreatmentPlan = async (planData: Omit<TreatmentPlan, 'id' | 'patientId'>, planIdToUpdate?: string) => {\n    const url = planIdToUpdate ? `/api/treatment-plans/${planIdToUpdate}` : `/api/patients/${patientId}/treatment-plans`;\n    const method = planIdToUpdate ? 'PUT' : 'POST';\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(planIdToUpdate ? planData : { ...planData, patientId }),\n      });\n      const result = await response.json();\n      if (!response.ok) throw new Error(result.message || 'Failed to save treatment plan');\n      toast({ title: planIdToUpdate ? \"Plan Updated\" : \"Plan Added\", description: result.title });\n      fetchData(); // Refresh all data\n      return true;\n    } catch (err: any) {\n      toast({ variant: \"destructive\", title: \"Error\", description: err.message });\n      return false;\n    }\n  };\n\n  const handleDeleteTreatmentPlan = async (planId: string) => {\n    try {\n      const response = await fetch(`/api/treatment-plans/${planId}`, { method: 'DELETE' });\n      if (!response.ok) {\n        const result = await response.json();\n        throw new Error(result.message || 'Failed to delete treatment plan');\n      }\n      toast({ title: \"Plan Deleted\", variant: \"default\" });\n      fetchData(); // Refresh\n    } catch (err: any) {\n      toast({ variant: \"destructive\", title: \"Error\", description: err.message });\n    }\n  };\n\n  const handleAddOrUpdateProgressNote = async (noteData: Omit<ProgressNote, 'id' | 'patientId'>, noteIdToUpdate?: string) => {\n    const url = noteIdToUpdate ? `/api/progress-notes/${noteIdToUpdate}` : `/api/patients/${patientId}/progress-notes`;\n    const method = noteIdToUpdate ? 'PUT' : 'POST';\n\n    // Mock image upload for now if files are present\n    if (noteData.images && Array.isArray(noteData.images)) {\n        // In a real app, upload images first, then use returned URLs\n        // For mock, we'll assume URLs are already provided if they exist or handled by API directly\n    }\n    \n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(noteIdToUpdate ? noteData : { ...noteData, patientId }),\n      });\n      const result = await response.json();\n      if (!response.ok) throw new Error(result.message || 'Failed to save progress note');\n      toast({ title: noteIdToUpdate ? \"Note Updated\" : \"Note Added\", description: `Note from ${result.date}` });\n      fetchData(); // Refresh\n      return true;\n    } catch (err: any) {\n      toast({ variant: \"destructive\", title: \"Error\", description: err.message });\n      return false;\n    }\n  };\n\n  const handleDeleteProgressNote = async (noteId: string) => {\n     try {\n      const response = await fetch(`/api/progress-notes/${noteId}`, { method: 'DELETE' });\n      if (!response.ok) {\n         const result = await response.json();\n        throw new Error(result.message || 'Failed to delete progress note');\n      }\n      toast({ title: \"Note Deleted\", variant: \"default\"});\n      fetchData(); // Refresh\n    } catch (err: any)\n      {\n      toast({ variant: \"destructive\", title: \"Error\", description: err.message });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n        <p className=\"ml-4 text-muted-foreground\">Loading patient details...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-64 text-destructive\">\n        <AlertTriangle className=\"h-12 w-12 mb-2\" />\n        <p className=\"text-lg\">{error}</p>\n        <Button onClick={() => router.push('/doctor/patients')} className=\"mt-4\">\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Patient List\n        </Button>\n      </div>\n    );\n  }\n  \n  if (!patient) {\n    // This case should ideally be covered by the error state if fetch fails.\n    // If fetch succeeds but patient is null (e.g., API returns 200 with null for some reason), handle it.\n    return (\n      <div className=\"flex flex-col items-center justify-center h-64\">\n        <AlertTriangle className=\"h-12 w-12 mb-2 text-muted-foreground\" />\n        <p className=\"text-lg text-muted-foreground\">Patient data could not be loaded.</p>\n         <Button onClick={() => router.push('/doctor/patients')} className=\"mt-4\">\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Patient List\n        </Button>\n      </div>\n    );\n  }\n\n\n  return (\n    <div className=\"space-y-6\">\n      <Card className=\"overflow-hidden shadow-lg\">\n        <CardHeader className=\"bg-muted/30 p-6 flex flex-col sm:flex-row items-start sm:items-center space-y-4 sm:space-y-0 sm:space-x-4\">\n          <Avatar className=\"h-20 w-20 border-2 border-primary\">\n            <AvatarImage src={`https://placehold.co/100x100.png?text=${patient.name.charAt(0)}`} alt={patient.name} data-ai-hint=\"avatar person\"/>\n            <AvatarFallback className=\"text-2xl\">{patient.name.charAt(0).toUpperCase()}</AvatarFallback>\n          </Avatar>\n          <div className=\"flex-grow\">\n            <CardTitle className=\"text-3xl\">{patient.name}</CardTitle>\n            <CardDescription className=\"text-md mt-1\">\n              DOB: {patient.dateOfBirth ? new Date(patient.dateOfBirth).toLocaleDateString() : 'N/A'} | Phone: {patient.phone || 'N/A'} | Email: {patient.email}\n            </CardDescription>\n          </div>\n          <Link href={`/doctor/patients/${patientId}/edit`} passHref>\n            <Button variant=\"outline\" className=\"w-full sm:w-auto\"><Edit3 className=\"mr-2 h-4 w-4\" /> Edit Patient Info</Button>\n          </Link>\n        </CardHeader>\n      </Card>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"grid w-full grid-cols-2 md:grid-cols-3\">\n          <TabsTrigger value=\"treatment-plans\"><ClipboardListIcon className=\"mr-2 h-4 w-4\" />Treatment Plans</TabsTrigger>\n          <TabsTrigger value=\"progress-notes\"><FileTextIcon className=\"mr-2 h-4 w-4\" />Progress Notes</TabsTrigger>\n          <TabsTrigger value=\"appointments\"><CalendarIcon className=\"mr-2 h-4 w-4\" />Appointments</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"treatment-plans\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <div>\n                <CardTitle>Treatment Plans</CardTitle>\n                <CardDescription>Manage and view patient's treatment plans.</CardDescription>\n              </div>\n              <DialogAddEditTreatmentPlan \n                patientId={patientId} \n                onSave={handleAddOrUpdateTreatmentPlan}\n                doctors={staffList} // Use fetched staff list\n              />\n            </CardHeader>\n            <CardContent>\n              {treatmentPlans.length > 0 ? (\n                <div className=\"space-y-4\">\n                {treatmentPlans.map(plan => (\n                  <Card key={plan.id} className=\"shadow-md\">\n                    <CardHeader>\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <CardTitle className=\"text-xl\">{plan.title}</CardTitle>\n                          <Badge variant={plan.status === 'Active' ? 'default' : 'secondary'} className=\"mt-1\">{plan.status}</Badge>\n                        </div>\n                        <div className=\"flex space-x-2\">\n                           <DialogAddEditTreatmentPlan \n                            plan={plan} \n                            patientId={patientId} \n                            onSave={handleAddOrUpdateTreatmentPlan}\n                            doctors={staffList} // Use fetched staff list\n                           />\n                          <Button variant=\"ghost\" size=\"icon\" className=\"text-destructive\" onClick={() => handleDeleteTreatmentPlan(plan.id)}><Trash2 className=\"h-4 w-4\"/></Button>\n                        </div>\n                      </div>\n                      <CardDescription>\n                        Start: {new Date(plan.startDate).toLocaleDateString()} | By: {staffList.find(s => s.id === plan.doctorId)?.name || 'N/A'} | Cost: ${plan.totalCost?.toFixed(2) || 'N/A'}\n                      </CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                      <h4 className=\"font-semibold mb-1\">Procedures:</h4>\n                      {plan.procedures.length > 0 ? (\n                        <ul className=\"list-disc pl-5 text-sm text-muted-foreground\">\n                          {plan.procedures.map(proc => <li key={proc.id}>{proc.name} (${proc.cost?.toFixed(2) || 'N/A'})</li>)}\n                        </ul>\n                      ) : <p className=\"text-sm text-muted-foreground\">No procedures listed.</p>}\n                      {plan.notes && <p className=\"mt-2 text-sm\"><strong>Notes:</strong> {plan.notes}</p>}\n                    </CardContent>\n                  </Card>\n                ))}\n                </div>\n              ) : <p className=\"text-muted-foreground\">No treatment plans found.</p>}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"progress-notes\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <div>\n                <CardTitle>Progress Notes</CardTitle>\n                <CardDescription>Record and review patient progress.</CardDescription>\n              </div>\n              <DialogAddEditProgressNote \n                patientId={patientId} \n                onSave={handleAddOrUpdateProgressNote}\n                doctors={staffList} // Use fetched staff list\n                treatmentPlans={treatmentPlans}\n              />\n            </CardHeader>\n            <CardContent>\n            {progressNotes.length > 0 ? (\n                <div className=\"space-y-4\">\n                {progressNotes.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime()).map(note => (\n                  <Card key={note.id} className=\"shadow-md\">\n                    <CardHeader>\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <CardTitle className=\"text-lg\">Note on {new Date(note.date).toLocaleDateString()} at {note.time}</CardTitle>\n                          {note.progressStage && <Badge variant=\"outline\" className=\"mt-1\">{note.progressStage}</Badge>}\n                        </div>\n                        <div className=\"flex space-x-2\">\n                          <DialogAddEditProgressNote \n                            note={note} \n                            patientId={patientId} \n                            onSave={handleAddOrUpdateProgressNote}\n                            doctors={staffList} // Use fetched staff list\n                            treatmentPlans={treatmentPlans}\n                          />\n                           <Button variant=\"ghost\" size=\"icon\" className=\"text-destructive\" onClick={() => handleDeleteProgressNote(note.id)}><Trash2 className=\"h-4 w-4\"/></Button>\n                        </div>\n                      </div>\n                     <CardDescription>By: {staffList.find(s => s.id === note.doctorId)?.name || 'Unknown'} {note.treatmentPlanId ? `(Plan: ${treatmentPlans.find(tp=>tp.id === note.treatmentPlanId)?.title || 'N/A'})` : ''}</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-sm whitespace-pre-wrap\">{note.note}</p>\n                      {note.images && note.images.length > 0 && (\n                        <div className=\"mt-3\">\n                          <h4 className=\"font-semibold text-xs mb-1\">Attached Images:</h4>\n                          <div className=\"flex space-x-2 overflow-x-auto pb-2\">\n                            {note.images.map(img => (\n                              <div key={img.id} className=\"flex-shrink-0 group relative\">\n                                <Image src={img.url} alt={img.caption || 'Progress image'} width={100} height={100} className=\"rounded object-cover border\" data-ai-hint=\"medical scan\"/>\n                                {img.caption && <p className=\"text-xs text-center mt-1 max-w-[100px] truncate\">{img.caption}</p>}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                ))}\n                </div>\n              ) : <p className=\"text-muted-foreground\">No progress notes found.</p>}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"appointments\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Appointments</CardTitle>\n              <CardDescription>View past and upcoming appointments for {patient.name}.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {appointments.length > 0 ? (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Date</TableHead>\n                      <TableHead>Time</TableHead>\n                      <TableHead>Type</TableHead>\n                      <TableHead>Doctor</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead className=\"text-right\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {appointments.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime()).map(apt => (\n                      <TableRow key={apt.id} className={apt.id === routerAppointmentId ? 'bg-accent/50' : ''}>\n                        <TableCell>{new Date(apt.date).toLocaleDateString()}</TableCell>\n                        <TableCell>{apt.time}</TableCell>\n                        <TableCell>{apt.type}</TableCell>\n                        <TableCell>{apt.doctorName || staffList.find(s => s.id === apt.doctorId)?.name || 'N/A'}</TableCell>\n                        <TableCell><Badge variant={apt.status === 'Completed' || apt.status === 'Confirmed' ? 'default' : 'secondary'}>{apt.status}</Badge></TableCell>\n                        <TableCell className=\"text-right space-x-1\">\n                          {apt.status === 'Scheduled' && <Button variant=\"outline\" size=\"sm\">Confirm</Button>}\n                          {apt.status !== 'Completed' && apt.status !== 'Cancelled' && <Button variant=\"outline\" size=\"sm\">Reschedule</Button>}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              ) : <p className=\"text-muted-foreground\">No appointments found.</p>}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\n// Dialog for Adding/Editing Treatment Plan\ninterface DialogAddEditTreatmentPlanProps {\n  plan?: TreatmentPlan;\n  patientId: string;\n  onSave: (data: Omit<TreatmentPlan, 'id' | 'patientId'>, planIdToUpdate?: string) => Promise<boolean>;\n  doctors: StaffMember[]; // Changed from simple object to StaffMember type\n}\n\nfunction DialogAddEditTreatmentPlan({ plan, patientId, onSave, doctors }: DialogAddEditTreatmentPlanProps) {\n  const isEditMode = !!plan;\n  const { toast } = useToast();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const [title, setTitle] = useState(plan?.title || '');\n  const [doctorId, setDoctorId] = useState(plan?.doctorId || '');\n  const [startDate, setStartDate] = useState(plan?.startDate || new Date().toISOString().split('T')[0]);\n  const [endDate, setEndDate] = useState(plan?.endDate || '');\n  const [status, setStatus] = useState<TreatmentPlan['status']>(plan?.status || 'Active');\n  const [proceduresStr, setProceduresStr] = useState(plan?.procedures.map(p => `${p.name} - $${p.cost || 0}`).join('\\n') || '');\n  const [notes, setNotes] = useState(plan?.notes || '');\n  const [totalCostStr, setTotalCostStr] = useState(plan?.totalCost?.toString() || '');\n\n  useEffect(() => {\n    if (isOpen) { // Reset form when dialog opens\n        if (plan) {\n            setTitle(plan.title);\n            setDoctorId(plan.doctorId);\n            setStartDate(plan.startDate);\n            setEndDate(plan.endDate || '');\n            setStatus(plan.status);\n            setProceduresStr(plan.procedures.map(p => `${p.name} - $${p.cost || 0}`).join('\\n'));\n            setNotes(plan.notes || '');\n            setTotalCostStr(plan.totalCost?.toString() || '');\n        } else {\n            setTitle(''); setDoctorId(''); setStartDate(new Date().toISOString().split('T')[0]); setEndDate('');\n            setStatus('Active'); setProceduresStr(''); setNotes(''); setTotalCostStr('');\n        }\n    }\n  }, [plan, isOpen]);\n\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    const procedures: Procedure[] = proceduresStr.split('\\n')\n      .map(line => line.trim())\n      .filter(line => line)\n      .map((line, index) => {\n        const parts = line.split(' - $');\n        return {\n          id: plan?.procedures?.[index]?.id || `proc_temp_${Date.now()}_${index}`, // Keep existing ID if editing\n          name: parts[0]?.trim() || `Unnamed Procedure ${index + 1}`,\n          cost: parseFloat(parts[1]) || 0,\n        };\n      });\n    \n    const calculatedTotalCost = procedures.reduce((sum, p) => sum + (p.cost || 0), 0);\n    const finalTotalCost = totalCostStr ? parseFloat(totalCostStr) : calculatedTotalCost;\n\n    const planData: Omit<TreatmentPlan, 'id' | 'patientId'> = {\n      title, doctorId, startDate, endDate: endDate || undefined, status, procedures, notes, totalCost: finalTotalCost,\n    };\n\n    const success = await onSave(planData, plan?.id);\n    if (success) {\n        setIsOpen(false);\n    }\n    setIsSubmitting(false);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        <Button variant={isEditMode ? \"ghost\" : \"default\"} size={isEditMode ? \"icon\" : \"default\"}>\n          {isEditMode ? <Edit3 className=\"h-4 w-4\" /> : <><PlusCircle className=\"mr-2 h-4 w-4\" /> Add Plan</>}\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-lg\">\n        <form onSubmit={handleSubmit}>\n          <DialogHeader>\n            <DialogTitle>{isEditMode ? \"Edit\" : \"Add New\"} Treatment Plan</DialogTitle>\n            <DialogDescription>\n              {isEditMode ? \"Modify the details of the existing treatment plan.\" : \"Create a new treatment plan for the patient.\"}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"grid gap-4 py-4 max-h-[60vh] overflow-y-auto pr-2\">\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"tp-title\">Title</Label>\n              <Input id=\"tp-title\" value={title} onChange={e => setTitle(e.target.value)} required />\n            </div>\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"tp-doctor\">Doctor</Label>\n              <Select value={doctorId} onValueChange={setDoctorId} required>\n                <SelectTrigger id=\"tp-doctor\"><SelectValue placeholder=\"Select doctor\" /></SelectTrigger>\n                <SelectContent>\n                  {doctors.map(doc => <SelectItem key={doc.id} value={doc.id}>{doc.name} ({doc.role})</SelectItem>)}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-1\">\n                <Label htmlFor=\"tp-start-date\">Start Date</Label>\n                <Input id=\"tp-start-date\" type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} required />\n                </div>\n                <div className=\"space-y-1\">\n                <Label htmlFor=\"tp-end-date\">End Date (Optional)</Label>\n                <Input id=\"tp-end-date\" type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} />\n                </div>\n            </div>\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"tp-procedures\">Procedures (Name - $Cost, one per line)</Label>\n              <Textarea id=\"tp-procedures\" value={proceduresStr} onChange={e => setProceduresStr(e.target.value)} rows={3} placeholder=\"e.g., Teeth Cleaning - $120&#10;X-Ray - $80\" />\n            </div>\n             <div className=\"space-y-1\">\n              <Label htmlFor=\"tp-total-cost\">Total Cost (auto-calculates if blank)</Label>\n              <Input id=\"tp-total-cost\" type=\"number\" value={totalCostStr} onChange={e => setTotalCostStr(e.target.value)} placeholder=\"e.g., 200.00\" />\n            </div>\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"tp-status\">Status</Label>\n              <Select value={status} onValueChange={(val) => setStatus(val as TreatmentPlan['status'])} required>\n                  <SelectTrigger id=\"tp-status\"><SelectValue placeholder=\"Select status\" /></SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Active\">Active</SelectItem>\n                    <SelectItem value=\"Completed\">Completed</SelectItem>\n                    <SelectItem value=\"On Hold\">On Hold</SelectItem>\n                    <SelectItem value=\"Cancelled\">Cancelled</SelectItem>\n                  </SelectContent>\n                </Select>\n            </div>\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"tp-notes\">Notes (Optional)</Label>\n              <Textarea id=\"tp-notes\" value={notes} onChange={e => setNotes(e.target.value)} />\n            </div>\n          </div>\n          <DialogFooter className=\"pt-4\">\n            <Button type=\"button\" variant=\"outline\" onClick={() => setIsOpen(false)} disabled={isSubmitting}>Cancel</Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n              {isEditMode ? \"Save Changes\" : \"Create Plan\"}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\n\n// Dialog for Adding/Editing Progress Note\ninterface DialogAddEditProgressNoteProps {\n  note?: ProgressNote;\n  patientId: string;\n  onSave: (data: Omit<ProgressNote, 'id' | 'patientId'>, noteIdToUpdate?: string) => Promise<boolean>;\n  doctors: StaffMember[];\n  treatmentPlans: TreatmentPlan[];\n}\n\nfunction DialogAddEditProgressNote({ note, patientId, onSave, doctors, treatmentPlans }: DialogAddEditProgressNoteProps) {\n  const isEditMode = !!note;\n  const { toast } = useToast();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const imageInputRef = useRef<HTMLInputElement>(null);\n\n  const [doctorId, setDoctorId] = useState(note?.doctorId || '');\n  const [treatmentPlanId, setTreatmentPlanId] = useState(note?.treatmentPlanId || '');\n  const [date, setDate] = useState(note?.date || new Date().toISOString().split('T')[0]);\n  const [time, setTime] = useState(note?.time || new Date().toTimeString().split(' ')[0].substring(0,5));\n  const [noteContent, setNoteContent] = useState(note?.note || '');\n  const [progressStage, setProgressStage] = useState(note?.progressStage || '');\n  \n  const [existingImages, setExistingImages] = useState<ProgressNote['images']>([]);\n  const [newFiles, setNewFiles] = useState<File[]>([]);\n\n\n  useEffect(() => {\n    if (isOpen) { // Reset form state when dialog opens\n        if (note) {\n            setDoctorId(note.doctorId);\n            setTreatmentPlanId(note.treatmentPlanId || '');\n            setDate(note.date);\n            setTime(note.time);\n            setNoteContent(note.note);\n            setProgressStage(note.progressStage || '');\n            setExistingImages(note.images || []);\n        } else {\n            setDoctorId(''); setTreatmentPlanId(''); setDate(new Date().toISOString().split('T')[0]);\n            setTime(new Date().toTimeString().split(' ')[0].substring(0,5));\n            setNoteContent(''); setProgressStage(''); setExistingImages([]);\n        }\n        setNewFiles([]); // Clear any previously selected new files\n        if (imageInputRef.current) imageInputRef.current.value = ''; // Reset file input\n    }\n  }, [note, isOpen]);\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      setNewFiles(Array.from(e.target.files));\n    }\n  };\n\n  const removeExistingImage = (imageToRemove: ProgressNoteImage) => {\n    setExistingImages(prev => prev.filter(img => img.id !== imageToRemove.id));\n  };\n\n  const removeNewFile = (fileToRemove: File) => {\n    setNewFiles(prev => prev.filter(file => file !== fileToRemove));\n    if (imageInputRef.current) imageInputRef.current.value = '';\n  };\n  \n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    let uploadedImageUrls: ProgressNote['images'] = [...existingImages];\n\n    if (newFiles.length > 0) {\n        // Simulate file upload: In a real app, upload files to GCS or similar, then get URLs\n        for (const file of newFiles) {\n            const formData = new FormData();\n            formData.append('imageFile', file);\n            try {\n                const res = await fetch('/api/upload/image', { method: 'POST', body: formData });\n                const uploadResult = await res.json();\n                if (!res.ok) throw new Error(uploadResult.message || `Upload failed for ${file.name}`);\n                uploadedImageUrls.push({ id: uploadResult.fileName, url: uploadResult.imageUrl, caption: file.name });\n            } catch (uploadError: any) {\n                toast({ variant: \"destructive\", title: \"Image Upload Error\", description: uploadError.message });\n                setIsSubmitting(false);\n                return;\n            }\n        }\n    }\n    \n    const noteData = {\n      doctorId, \n      treatmentPlanId: treatmentPlanId || undefined, \n      date, \n      time, \n      note: noteContent, \n      progressStage: progressStage || undefined,\n      images: uploadedImageUrls,\n    };\n\n    const success = await onSave(noteData, note?.id);\n    if (success) {\n        setIsOpen(false);\n    }\n    setIsSubmitting(false);\n  };\n\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        <Button variant={isEditMode ? \"ghost\" : \"default\"} size={isEditMode ? \"icon\" : \"default\"}>\n           {isEditMode ? <Edit3 className=\"h-4 w-4\" /> : <><PlusCircle className=\"mr-2 h-4 w-4\" /> Add Note</>}\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-lg\">\n        <form onSubmit={handleSubmit}>\n          <DialogHeader>\n            <DialogTitle>{isEditMode ? \"Edit\" : \"Add New\"} Progress Note</DialogTitle>\n            <DialogDescription>\n              {isEditMode ? \"Update the progress note details.\" : \"Add a new progress note for the patient.\"}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"grid gap-4 py-4 max-h-[60vh] overflow-y-auto pr-2\">\n            <div className=\"space-y-1\">\n                <Label htmlFor=\"pn-doctor\">Doctor</Label>\n                <Select value={doctorId} onValueChange={setDoctorId} required>\n                    <SelectTrigger id=\"pn-doctor\"><SelectValue placeholder=\"Select doctor\" /></SelectTrigger>\n                    <SelectContent>{doctors.map(doc => <SelectItem key={doc.id} value={doc.id}>{doc.name} ({doc.role})</SelectItem>)}</SelectContent>\n                </Select>\n            </div>\n            <div className=\"space-y-1\">\n                <Label htmlFor=\"pn-plan\">Treatment Plan (Optional)</Label>\n                <Select value={treatmentPlanId} onValueChange={setTreatmentPlanId}>\n                    <SelectTrigger id=\"pn-plan\"><SelectValue placeholder=\"Link to treatment plan\" /></SelectTrigger>\n                    <SelectContent>\n                        <SelectItem value=\"\">None</SelectItem>\n                        {treatmentPlans.map(tp => <SelectItem key={tp.id} value={tp.id}>{tp.title}</SelectItem>)}\n                    </SelectContent>\n                </Select>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-1\">\n                    <Label htmlFor=\"pn-date\">Date</Label>\n                    <Input id=\"pn-date\" type=\"date\" value={date} onChange={e => setDate(e.target.value)} required />\n                </div>\n                <div className=\"space-y-1\">\n                    <Label htmlFor=\"pn-time\">Time</Label>\n                    <Input id=\"pn-time\" type=\"time\" value={time} onChange={e => setTime(e.target.value)} required />\n                </div>\n            </div>\n            <div className=\"space-y-1\">\n                <Label htmlFor=\"pn-note\">Note Content</Label>\n                <Textarea id=\"pn-note\" value={noteContent} onChange={e => setNoteContent(e.target.value)} rows={5} required />\n            </div>\n            <div className=\"space-y-1\">\n                <Label htmlFor=\"pn-stage\">Progress Stage (Optional)</Label>\n                <Input id=\"pn-stage\" value={progressStage} onChange={e => setProgressStage(e.target.value)} placeholder=\"e.g., Post-Op Day 3, Phase 1 Complete\" />\n            </div>\n            <div className=\"space-y-2\">\n                <Label htmlFor=\"pn-images-upload\">Attach New Images/PDFs</Label>\n                <Input id=\"pn-images-upload\" type=\"file\" multiple onChange={handleFileChange} accept=\"image/*,application/pdf\" ref={imageInputRef} />\n            </div>\n            \n            { (existingImages.length > 0 || newFiles.length > 0) && (\n                <div>\n                    <Label className=\"text-sm font-medium\">Attachments:</Label>\n                    <div className=\"flex flex-wrap gap-2 mt-1\">\n                        {existingImages.map(img => (\n                            <div key={img.id} className=\"relative group w-20 h-20\">\n                                {img.url.toLowerCase().endsWith('.pdf') ? <FileText className=\"h-16 w-16 text-destructive\"/> : <Image src={img.url} alt={img.caption || 'Existing image'} width={80} height={80} className=\"rounded object-cover border\" data-ai-hint=\"medical scan\"/>}\n                                <Button type=\"button\" variant=\"destructive\" size=\"icon\" className=\"absolute -top-2 -right-2 h-5 w-5 opacity-0 group-hover:opacity-100\" onClick={() => removeExistingImage(img)}><Trash2 className=\"h-3 w-3\"/></Button>\n                            </div>\n                        ))}\n                        {newFiles.map((file, index) => (\n                            <div key={index} className=\"relative group w-20 h-20\">\n                                {file.type.startsWith('image/') ? <Image src={URL.createObjectURL(file)} alt={file.name} width={80} height={80} className=\"rounded object-cover border\" data-ai-hint=\"medical scan\"/> : <FileText className=\"h-16 w-16 text-muted-foreground\"/>}\n                                <Button type=\"button\" variant=\"destructive\" size=\"icon\" className=\"absolute -top-2 -right-2 h-5 w-5 opacity-0 group-hover:opacity-100\" onClick={() => removeNewFile(file)}><Trash2 className=\"h-3 w-3\"/></Button>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n          </div>\n          <DialogFooter className=\"pt-4\">\n             <Button type=\"button\" variant=\"outline\" onClick={() => setIsOpen(false)} disabled={isSubmitting}>Cancel</Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n                {isEditMode ? \"Save Changes\" : \"Add Note\"}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}