{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/staff/dashboard/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport type { Appointment, Invoice, Conversation } from \"@/lib/types\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { CalendarPlus, Users, DollarSign, MessageSquare, AlertCircle, CheckCircle, Clock, Edit, Loader2, AlertTriangle } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface ClinicWaitTime {\n  text: string;\n  updatedAt: string;\n}\n\nexport default function StaffDashboardPage() {\n  const { toast } = useToast();\n\n  // Wait Time State\n  const [waitTimeText, setWaitTimeText] = useState('');\n  const [isUpdatingWaitTime, setIsUpdatingWaitTime] = useState(false);\n\n  // Appointments State\n  const [todaysAppointments, setTodaysAppointments] = useState<Appointment[]>([]);\n  const [isLoadingTodaysAppointments, setIsLoadingTodaysAppointments] = useState(true);\n  const [todaysAppointmentsError, setTodaysAppointmentsError] = useState<string | null>(null);\n\n  // Pending Requests (Scheduled Appointments) State\n  const [pendingRequestsCount, setPendingRequestsCount] = useState(0);\n  const [isLoadingPendingRequests, setIsLoadingPendingRequests] = useState(true);\n  const [pendingRequestsError, setPendingRequestsError] = useState<string | null>(null);\n\n  // Outstanding Payments State\n  const [outstandingPaymentsCount, setOutstandingPaymentsCount] = useState(0);\n  const [isLoadingOutstandingPayments, setIsLoadingOutstandingPayments] = useState(true);\n  const [outstandingPaymentsError, setOutstandingPaymentsError] = useState<string | null>(null);\n\n  // Unread Messages State\n  const [unreadMessagesCount, setUnreadMessagesCount] = useState(0);\n  const [isLoadingUnreadMessages, setIsLoadingUnreadMessages] = useState(true);\n  const [unreadMessagesError, setUnreadMessagesError] = useState<string | null>(null);\n\n\n  const fetchDashboardData = useCallback(async () => {\n    setIsLoadingTodaysAppointments(true);\n    setTodaysAppointmentsError(null);\n    setIsLoadingPendingRequests(true);\n    setPendingRequestsError(null);\n    setIsLoadingOutstandingPayments(true);\n    setOutstandingPaymentsError(null);\n    setIsLoadingUnreadMessages(true);\n    setUnreadMessagesError(null);\n\n    try {\n      const [appointmentsRes, invoicesRes, conversationsRes] = await Promise.all([\n        fetch('/api/appointments'),\n        fetch('/api/invoices'),\n        fetch('/api/conversations')\n      ]);\n\n      // Process Appointments\n      if (!appointmentsRes.ok) {\n        const errorData = await appointmentsRes.json();\n        const errorMsg = errorData.message || 'Failed to fetch appointments';\n        setTodaysAppointmentsError(errorMsg);\n        setPendingRequestsError(errorMsg);\n      } else {\n        const allAppointments: Appointment[] = await appointmentsRes.json();\n        const todayISO = new Date().toISOString().split('T')[0];\n        \n        const filteredTodays = allAppointments.filter(apt => \n          apt.date === todayISO && \n          apt.status !== 'Completed' && \n          apt.status !== 'Cancelled'\n        );\n        setTodaysAppointments(filteredTodays);\n\n        const scheduledAppointments = allAppointments.filter(apt => apt.status === 'Scheduled');\n        setPendingRequestsCount(scheduledAppointments.length);\n      }\n\n      // Process Invoices\n      if (!invoicesRes.ok) {\n        const errorData = await invoicesRes.json();\n        setOutstandingPaymentsError(errorData.message || 'Failed to fetch invoices');\n      } else {\n        const allInvoices: Invoice[] = await invoicesRes.json();\n        const outstanding = allInvoices.filter(inv => \n            inv.status === 'Pending' || inv.status === 'Overdue' || inv.status === 'Partial'\n        ).length;\n        setOutstandingPaymentsCount(outstanding);\n      }\n\n      // Process Conversations\n      if (!conversationsRes.ok) {\n        const errorData = await conversationsRes.json();\n        setUnreadMessagesError(errorData.message || 'Failed to fetch conversations');\n      } else {\n        const allConversations: Conversation[] = await conversationsRes.json();\n        const unread = allConversations.reduce((sum, convo) => sum + (convo.unreadCountForStaff || 0), 0);\n        setUnreadMessagesCount(unread);\n      }\n\n    } catch (error: any) {\n      const generalErrorMsg = \"Could not load some dashboard data.\";\n      if (!todaysAppointmentsError) setTodaysAppointmentsError(generalErrorMsg);\n      if (!pendingRequestsError) setPendingRequestsError(generalErrorMsg);\n      if (!outstandingPaymentsError) setOutstandingPaymentsError(generalErrorMsg);\n      if (!unreadMessagesError) setUnreadMessagesError(generalErrorMsg);\n      toast({ variant: \"destructive\", title: \"Dashboard Error\", description: error.message || generalErrorMsg });\n    } finally {\n      setIsLoadingTodaysAppointments(false);\n      setIsLoadingPendingRequests(false);\n      setIsLoadingOutstandingPayments(false);\n      setIsLoadingUnreadMessages(false);\n    }\n  }, [toast, todaysAppointmentsError, pendingRequestsError, outstandingPaymentsError, unreadMessagesError]);\n\n\n  useEffect(() => {\n    const fetchWaitTime = async () => {\n      // This can remain separate as it's a simple, single fetch\n      try {\n        const response = await fetch('/api/clinic/wait-time');\n        if (!response.ok) {\n          throw new Error('Failed to fetch wait time');\n        }\n        const data: ClinicWaitTime = await response.json();\n        setWaitTimeText(data.text);\n      } catch (error) {\n        console.error(\"Error fetching wait time:\", error);\n        toast({\n          variant: \"destructive\",\n          title: \"Error\",\n          description: \"Could not load current wait time.\",\n        });\n      }\n    };\n    fetchWaitTime();\n    fetchDashboardData();\n  }, [toast, fetchDashboardData]);\n\n\n  const handleUpdateWaitTime = async () => {\n    if (!waitTimeText.trim()) {\n      toast({\n        variant: \"destructive\",\n        title: \"Validation Error\",\n        description: \"Wait time text cannot be empty.\",\n      });\n      return;\n    }\n    setIsUpdatingWaitTime(true);\n    try {\n      const response = await fetch('/api/clinic/wait-time', {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: waitTimeText }),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update wait time');\n      }\n      const updatedData: ClinicWaitTime = await response.json();\n      setWaitTimeText(updatedData.text);\n      toast({\n        title: \"Success!\",\n        description: `Wait time updated to: ${updatedData.text}`,\n      });\n    } catch (error: any) {\n      console.error(\"Error updating wait time:\", error);\n      toast({\n        variant: \"destructive\",\n        title: \"Update Failed\",\n        description: error.message || \"Could not update wait time.\",\n      });\n    } finally {\n      setIsUpdatingWaitTime(false);\n    }\n  };\n\n  const quickActions = [\n    { label: \"New Appointment\", href: \"/staff/appointments\", icon: <CalendarPlus className=\"h-5 w-5\" /> },\n    { label: \"Patient List\", href: \"/staff/patients\", icon: <Users className=\"h-5 w-5\" /> },\n    { label: \"Manage Payments\", href: \"/staff/payments\", icon: <DollarSign className=\"h-5 w-5\" /> },\n    { label: \"Send Message\", href: \"/staff/communication\", icon: <MessageSquare className=\"h-5 w-5\" /> },\n  ];\n\n  const renderCardContent = (isLoading: boolean, error: string | null, value: number | string, unit: string) => {\n    if (isLoading) {\n      return (\n        <div className=\"flex justify-center items-center h-10\">\n          <Loader2 className=\"h-6 w-6 animate-spin text-muted-foreground\" />\n        </div>\n      );\n    }\n    if (error) {\n      return <div className=\"text-destructive text-xs text-center py-2\" title={error}>{error.length > 25 ? \"Error\" : error}</div>;\n    }\n    return (\n      <>\n        <div className=\"text-2xl font-bold\">{value}</div>\n        <p className=\"text-xs text-muted-foreground\">{unit}</p>\n      </>\n    );\n  };\n\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-2xl sm:text-3xl font-bold\">Staff Dashboard</h1>\n\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Today's Appointments</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {renderCardContent(isLoadingTodaysAppointments, todaysAppointmentsError, todaysAppointments.length, \"Scheduled for today\")}\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Requests</CardTitle>\n            <AlertCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {renderCardContent(isLoadingPendingRequests, pendingRequestsError, pendingRequestsCount, \"Appointments awaiting action\")}\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Outstanding Payments</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {renderCardContent(isLoadingOutstandingPayments, outstandingPaymentsError, outstandingPaymentsCount, \"Invoices needing payment\")}\n          </CardContent>\n        </Card>\n         <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Unread Messages</CardTitle>\n            <MessageSquare className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {renderCardContent(isLoadingUnreadMessages, unreadMessagesError, unreadMessagesCount, \"From patients\")}\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-3\">\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <CardTitle>Today's Schedule</CardTitle>\n            <CardDescription>Appointments for {new Date().toLocaleDateString(undefined, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {isLoadingTodaysAppointments ? (\n              <div className=\"flex items-center justify-center p-4\">\n                <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                <p className=\"ml-2 text-muted-foreground\">Loading schedule...</p>\n              </div>\n            ) : todaysAppointmentsError ? (\n              <div className=\"flex flex-col items-center justify-center p-4 text-destructive\">\n                <AlertTriangle className=\"h-8 w-8 mb-2\" />\n                <p>{todaysAppointmentsError}</p>\n              </div>\n            ) : todaysAppointments.length > 0 ? (\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Time</TableHead>\n                    <TableHead>Patient</TableHead>\n                    <TableHead>Type</TableHead>\n                    <TableHead>Doctor</TableHead>\n                    <TableHead>Status</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {todaysAppointments.map(apt => (\n                    <TableRow key={apt.id}>\n                      <TableCell>{apt.time}</TableCell>\n                      <TableCell>{apt.patientName || 'N/A'}</TableCell>\n                      <TableCell>{apt.type}</TableCell>\n                      <TableCell>{apt.doctorName || 'N/A'}</TableCell>\n                      <TableCell><Badge variant={apt.status === 'Confirmed' ? 'default' : 'secondary'}>{apt.status}</Badge></TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            ) : (\n              <p className=\"text-muted-foreground\">No appointments scheduled for today.</p>\n            )}\n          </CardContent>\n        </Card>\n\n        <div className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Quick Actions</CardTitle>\n              <CardDescription>Access common tasks quickly.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"grid grid-cols-2 gap-4\">\n              {quickActions.map(action => (\n                <Link href={action.href} key={action.label} passHref>\n                  <Button variant=\"outline\" className=\"w-full h-20 flex flex-col items-center justify-center text-center\">\n                    {action.icon}\n                    <span className=\"mt-1 text-xs\">{action.label}</span>\n                  </Button>\n                </Link>\n              ))}\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Update Live Wait Time</CardTitle>\n              <CardDescription>Set the current estimated wait time displayed on the homepage.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div>\n                <Label htmlFor=\"liveWaitTime\" className=\"mb-1 block\">Current Wait Time Text</Label>\n                <Input \n                  id=\"liveWaitTime\" \n                  placeholder=\"e.g., <15 mins\" \n                  value={waitTimeText}\n                  onChange={(e) => setWaitTimeText(e.target.value)}\n                  disabled={isUpdatingWaitTime}\n                />\n              </div>\n              <Button \n                className=\"w-full\" \n                onClick={handleUpdateWaitTime}\n                disabled={isUpdatingWaitTime}\n              >\n                <Edit className=\"mr-2 h-4 w-4\" /> \n                {isUpdatingWaitTime ? 'Updating...' : 'Set Wait Time'}\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n      \n      <Card>\n        <CardHeader>\n            <CardTitle>Clinic Announcements</CardTitle>\n            <CardDescription>Important updates and information for staff.</CardDescription>\n        </CardHeader>\n        <CardContent>\n            <div className=\"p-4 bg-accent/30 rounded-md\">\n                <div className=\"flex items-start space-x-3\">\n                    <CheckCircle className=\"h-5 w-5 text-accent mt-1\" />\n                    <div>\n                        <h4 className=\"font-semibold text-accent-foreground\">System Maintenance Scheduled</h4>\n                        <p className=\"text-sm text-muted-foreground\">The patient portal will be briefly unavailable this Sunday from 2 AM to 3 AM for scheduled maintenance.</p>\n                    </div>\n                </div>\n            </div>\n             <div className=\"p-4 bg-destructive/10 rounded-md mt-3\">\n                <div className=\"flex items-start space-x-3\">\n                    <AlertCircle className=\"h-5 w-5 text-destructive mt-1\" />\n                    <div>\n                        <h4 className=\"font-semibold text-destructive-foreground\">Reminder: Staff Meeting</h4>\n                        <p className=\"text-sm text-muted-foreground\">Monthly staff meeting tomorrow at 9 AM in the conference room. Please be punctual.</p>\n                    </div>\n                </div>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}