{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"Select\",\n);\nexport const SelectContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectContent() from the server but SelectContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectContent\",\n);\nexport const SelectGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectGroup() from the server but SelectGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectGroup\",\n);\nexport const SelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectItem() from the server but SelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectItem\",\n);\nexport const SelectLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectLabel() from the server but SelectLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectLabel\",\n);\nexport const SelectScrollDownButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollDownButton() from the server but SelectScrollDownButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectScrollDownButton\",\n);\nexport const SelectScrollUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollUpButton() from the server but SelectScrollUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectScrollUpButton\",\n);\nexport const SelectSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectSeparator() from the server but SelectSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectSeparator\",\n);\nexport const SelectTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectTrigger() from the server but SelectTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectTrigger\",\n);\nexport const SelectValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectValue() from the server but SelectValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectValue\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,8DACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,8DACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"Select\",\n);\nexport const SelectContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectContent() from the server but SelectContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectContent\",\n);\nexport const SelectGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectGroup() from the server but SelectGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectGroup\",\n);\nexport const SelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectItem() from the server but SelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectItem\",\n);\nexport const SelectLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectLabel() from the server but SelectLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectLabel\",\n);\nexport const SelectScrollDownButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollDownButton() from the server but SelectScrollDownButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectScrollDownButton\",\n);\nexport const SelectScrollUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollUpButton() from the server but SelectScrollUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectScrollUpButton\",\n);\nexport const SelectSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectSeparator() from the server but SelectSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectSeparator\",\n);\nexport const SelectTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectTrigger() from the server but SelectTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectTrigger\",\n);\nexport const SelectValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectValue() from the server but SelectValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectValue\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0CACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,0CACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mockData.ts"],"sourcesContent":["import type { Patient, Appointment, TreatmentPlan, ProgressNote, StaffMember, Invoice } from './types';\n\nexport const mockPatients: Patient[] = [\n  { id: 'pat1', name: 'Alice Wonderland', email: 'alice@example.com', dateOfBirth: '1990-05-15', phone: '555-0101' },\n  { id: 'pat2', name: 'Bob The Builder', email: 'bob@example.com', dateOfBirth: '1985-11-20', phone: '555-0102' },\n  { id: 'pat3', name: 'Charlie Brown', email: 'charlie@example.com', dateOfBirth: '2000-01-30', phone: '555-0103' },\n];\n\nexport const mockStaff: StaffMember[] = [\n  { id: 'doc1', name: 'Dr. Loji', role: 'Dentist', email: 'drloji@example.com' },\n  { id: 'staff1', name: 'Sarah Miller', role: 'Receptionist', email: 'sarah@example.com' },\n  { id: 'hyg1', name: 'Mike Ross', role: 'Hygienist', email: 'mike@example.com' },\n];\n\nexport const mockAppointments: Appointment[] = [\n  { id: 'apt1', patientId: 'pat1', patientName: 'Alice Wonderland', doctorId: 'doc1', doctorName: 'Dr. Loji', date: new Date().toISOString().split('T')[0], time: '10:00 AM', type: 'Check-up', status: 'Scheduled' },\n  { id: 'apt2', patientId: 'pat2', patientName: 'Bob The Builder', doctorId: 'doc1', doctorName: 'Dr. Loji', date: new Date(Date.now() + 86400000).toISOString().split('T')[0], time: '02:30 PM', type: 'Cleaning', status: 'Confirmed' },\n  { id: 'apt3', patientId: 'pat1', patientName: 'Alice Wonderland', doctorId: 'doc1', doctorName: 'Dr. Loji', date: new Date(Date.now() - 86400000 * 5).toISOString().split('T')[0], time: '09:00 AM', type: 'Filling', status: 'Completed' },\n];\n\nexport const mockTreatmentPlans: TreatmentPlan[] = [\n  {\n    id: 'tp1',\n    patientId: 'pat1',\n    doctorId: 'doc1',\n    title: 'Comprehensive Oral Care Plan',\n    procedures: [\n      { id: 'proc1', name: 'Full Mouth X-Ray', cost: 150 },\n      { id: 'proc2', name: 'Deep Cleaning (Scaling & Root Planing)', cost: 400 },\n      { id: 'proc3', name: 'Fluoride Treatment', cost: 50 },\n    ],\n    startDate: new Date(Date.now() - 86400000 * 10).toISOString().split('T')[0],\n    status: 'Active',\n    totalCost: 600,\n  },\n  {\n    id: 'tp2',\n    patientId: 'pat2',\n    doctorId: 'doc1',\n    title: 'Implant Placement - Phase 1',\n    procedures: [{ id: 'proc4', name: 'Dental Implant Surgery (Single Tooth)', cost: 2000 }],\n    startDate: new Date().toISOString().split('T')[0],\n    status: 'Active',\n    totalCost: 2000,\n  },\n];\n\nexport const mockProgressNotes: ProgressNote[] = [\n  {\n    id: 'pn1',\n    patientId: 'pat1',\n    treatmentPlanId: 'tp1',\n    doctorId: 'doc1',\n    date: new Date(Date.now() - 86400000 * 9).toISOString().split('T')[0],\n    time: '10:30 AM',\n    note: 'Initial consultation. Discussed treatment plan. Patient agreeable. Full mouth X-rays taken.',\n    images: [{ id: 'img1', url: 'https://placehold.co/300x200.png', caption: 'X-Ray Left Side' }],\n    progressStage: 'Initial Assessment',\n  },\n  {\n    id: 'pn2',\n    patientId: 'pat1',\n    treatmentPlanId: 'tp1',\n    doctorId: 'doc1',\n    date: new Date(Date.now() - 86400000 * 2).toISOString().split('T')[0],\n    time: '11:00 AM',\n    note: 'Deep cleaning performed on upper quadrant. Patient tolerated well. Advised on post-op care.',\n    progressStage: 'Procedure Day 1',\n  },\n];\n\nexport const mockInvoices: Invoice[] = [\n    { \n        id: 'inv1', \n        patientId: 'pat1', \n        date: new Date(Date.now() - 86400000 * 10).toISOString().split('T')[0], \n        dueDate: new Date(Date.now() + 86400000 * 20).toISOString().split('T')[0],\n        items: [\n            { description: 'Full Mouth X-Ray', quantity: 1, unitPrice: 150, totalPrice: 150 },\n            { description: 'Deep Cleaning (Scaling & Root Planing)', quantity: 1, unitPrice: 400, totalPrice: 400 },\n        ], \n        totalAmount: 550, \n        amountPaid: 200, \n        status: 'Partial' \n    },\n    { \n        id: 'inv2', \n        patientId: 'pat2', \n        date: new Date().toISOString().split('T')[0], \n        dueDate: new Date(Date.now() + 86400000 * 30).toISOString().split('T')[0],\n        items: [\n            { description: 'Dental Implant Surgery (Single Tooth) - Deposit', quantity: 1, unitPrice: 1000, totalPrice: 1000 },\n        ], \n        totalAmount: 1000, \n        amountPaid: 0, \n        status: 'Pending' \n    },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 647, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,8DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA","debugId":null}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,0CACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA","debugId":null}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/staff/payments/page.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { mockInvoices, mockPatients } from \"@/lib/mockData\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { DollarSign, PlusCircle, Search, Receipt } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\n\nexport default function StaffPaymentsPage() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl sm:text-3xl font-bold\">Payment Management</h1>\n        <DialogRecordPayment />\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Outstanding Invoices</CardTitle>\n          <CardDescription>View and manage patient invoices.</CardDescription>\n           <div className=\"flex w-full max-w-md items-center space-x-2 mt-2\">\n            <Input type=\"text\" placeholder=\"Search by patient name or invoice ID...\" className=\"flex-1\" />\n            <Button type=\"submit\"><Search className=\"mr-2 h-4 w-4\" /> Search</Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Invoice ID</TableHead>\n                <TableHead>Patient</TableHead>\n                <TableHead>Date</TableHead>\n                <TableHead>Due Date</TableHead>\n                <TableHead>Total Amount</TableHead>\n                <TableHead>Amount Paid</TableHead>\n                <TableHead>Status</TableHead>\n                <TableHead className=\"text-right\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {mockInvoices.map(invoice => {\n                const patient = mockPatients.find(p => p.id === invoice.patientId);\n                return (\n                  <TableRow key={invoice.id}>\n                    <TableCell className=\"font-medium\">{invoice.id}</TableCell>\n                    <TableCell>{patient?.name || 'Unknown Patient'}</TableCell>\n                    <TableCell>{new Date(invoice.date).toLocaleDateString()}</TableCell>\n                    <TableCell>{invoice.dueDate ? new Date(invoice.dueDate).toLocaleDateString() : 'N/A'}</TableCell>\n                    <TableCell>${invoice.totalAmount.toFixed(2)}</TableCell>\n                    <TableCell>${invoice.amountPaid.toFixed(2)}</TableCell>\n                    <TableCell>\n                      <Badge \n                        variant={\n                          invoice.status === 'Paid' ? 'default' : \n                          invoice.status === 'Pending' ? 'secondary' : \n                          invoice.status === 'Overdue' ? 'destructive' : 'outline'\n                        }\n                      >\n                        {invoice.status}\n                      </Badge>\n                    </TableCell>\n                    <TableCell className=\"text-right space-x-1\">\n                        <DialogRecordPayment invoice={invoice} patientName={patient?.name}/>\n                        <Button variant=\"ghost\" size=\"icon\" aria-label=\"View Receipt\"><Receipt className=\"h-4 w-4\"/></Button>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          {mockInvoices.length === 0 && <p className=\"text-center text-muted-foreground py-4\">No invoices found.</p>}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nfunction DialogRecordPayment({ invoice, patientName }: { invoice?: any, patientName?: string }) {\n  const isEditMode = !!invoice;\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant={isEditMode ? \"outline\" : \"default\"} size={isEditMode ? \"sm\" : \"default\"}>\n          {isEditMode ? <DollarSign className=\"mr-1 h-4 w-4\"/> : <PlusCircle className=\"mr-2 h-4 w-4\" />} \n          {isEditMode ? \"Record Payment\" : \"New Payment\"}\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>{isEditMode ? \"Record Payment For Invoice \" + invoice.id : \"Record New Payment\"}</DialogTitle>\n          <DialogDescription>\n            {isEditMode ? `Patient: ${patientName}` : \"Select patient and enter payment details.\"}\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n          {!isEditMode && (\n            <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"payment-patient\" className=\"text-right\">Patient</Label>\n                <Select>\n                    <SelectTrigger id=\"payment-patient\" className=\"col-span-3\">\n                    <SelectValue placeholder=\"Select patient\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                    {mockPatients.map(p => <SelectItem key={p.id} value={p.id}>{p.name}</SelectItem>)}\n                    </SelectContent>\n                </Select>\n            </div>\n          )}\n          {isEditMode && (\n             <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label className=\"text-right\">Amount Due</Label>\n                <p className=\"col-span-3 font-semibold\">${(invoice.totalAmount - invoice.amountPaid).toFixed(2)}</p>\n            </div>\n          )}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"payment-amount\" className=\"text-right\">Amount Paid</Label>\n            <Input id=\"payment-amount\" type=\"number\" placeholder=\"0.00\" className=\"col-span-3\" />\n          </div>\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"payment-method\" className=\"text-right\">Method</Label>\n            <Select defaultValue=\"Card\">\n                <SelectTrigger id=\"payment-method\" className=\"col-span-3\">\n                    <SelectValue placeholder=\"Select method\" />\n                </SelectTrigger>\n                <SelectContent>\n                    <SelectItem value=\"Card\">Credit/Debit Card</SelectItem>\n                    <SelectItem value=\"Cash\">Cash</SelectItem>\n                    <SelectItem value=\"Insurance\">Insurance</SelectItem>\n                    <SelectItem value=\"Other\">Other</SelectItem>\n                </SelectContent>\n            </Select>\n          </div>\n           <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"payment-date\" className=\"text-right\">Payment Date</Label>\n            <Input id=\"payment-date\" type=\"date\" defaultValue={new Date().toISOString().split('T')[0]} className=\"col-span-3\" />\n          </div>\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"payment-notes\" className=\"text-right\">Notes</Label>\n            <Input id=\"payment-notes\" placeholder=\"Optional transaction notes\" className=\"col-span-3\" />\n          </div>\n        </div>\n        <DialogFooter>\n          <Button type=\"submit\">Record Payment</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}