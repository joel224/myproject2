{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/doctor/patients/%5BpatientId%5D/edit/page.tsx"],"sourcesContent":["\n// src/app/doctor/patients/[patientId]/edit/page.tsx\n'use client';\n\nimport { useState, type FormEvent, ChangeEvent, useEffect, useRef } from 'react';\nimport { useRouter, useParams } from 'next/navigation';\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, FileText, ShieldAlert, HeartPulse, Droplets, Info, Wind, Save, Plus, X, Trash2 } from 'lucide-react';\nimport Image from 'next/image';\nimport type { Patient } from '@/lib/types';\n\ninterface FormData extends Omit<Patient, 'id' | 'age'> { \n  age: string; \n}\n\nexport default function EditPatientPage() {\n  const router = useRouter();\n  const params = useParams();\n  const patientId = params.patientId as string;\n  const { toast } = useToast();\n  const xrayInputRef = useRef<HTMLInputElement>(null);\n\n  const [formData, setFormData] = useState<Partial<FormData>>({\n    name: '',\n    email: '',\n    phone: '',\n    dateOfBirth: '',\n    age: '',\n    medicalRecords: '',\n    xrayImageUrls: [],\n    hasDiabetes: false,\n    hasHighBloodPressure: false,\n    hasStrokeOrHeartAttackHistory: false,\n    hasBleedingDisorders: false,\n    hasAllergy: false,\n    allergySpecifics: '',\n    hasAsthma: false,\n  });\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [errors, setErrors] = useState<Partial<Record<keyof FormData, string>>>({});\n\n  useEffect(() => {\n    if (patientId) {\n      const fetchPatientData = async () => {\n        setIsLoadingData(true);\n        try {\n          const response = await fetch(`/api/patients/${patientId}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch patient data');\n          }\n          const data: Patient = await response.json();\n          setFormData({\n            ...data,\n            dateOfBirth: data.dateOfBirth ? data.dateOfBirth.split('T')[0] : '', \n            age: data.age?.toString() || '',\n            xrayImageUrls: data.xrayImageUrls || [],\n          });\n        } catch (error: any) {\n          toast({ variant: \"destructive\", title: \"Error\", description: error.message });\n          router.push('/doctor/patients'); \n        } finally {\n          setIsLoadingData(false);\n        }\n      };\n      fetchPatientData();\n    }\n  }, [patientId, toast, router]);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value, type } = e.target;\n    if (type === 'checkbox') {\n      const { checked } = e.target as HTMLInputElement;\n      setFormData(prev => ({ ...prev, [name]: checked }));\n      if (name === 'hasAllergy' && !checked) {\n        setFormData(prev => ({ ...prev, allergySpecifics: '' }));\n      }\n    } else {\n      setFormData(prev => ({ ...prev, [name]: value }));\n    }\n    if (errors[name as keyof FormData]) {\n      setErrors(prev => ({ ...prev, [name]: undefined }));\n    }\n  };\n\n const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const newFiles = Array.from(e.target.files);\n      setSelectedFiles(prevFiles => [...prevFiles, ...newFiles]); // Append new files\n       if (xrayInputRef.current) {\n        xrayInputRef.current.value = ''; \n      }\n    }\n  };\n\n  const removeSelectedFile = (indexToRemove: number) => {\n    setSelectedFiles(prevFiles => prevFiles.filter((_, index) => index !== indexToRemove));\n  };\n  \n  const removeUploadedImage = (urlToRemove: string) => {\n    setFormData(prev => ({\n      ...prev,\n      xrayImageUrls: (prev.xrayImageUrls || []).filter(url => url !== urlToRemove)\n    }));\n  };\n\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<Record<keyof FormData, string>> = {};\n    if (!formData.name?.trim()) newErrors.name = \"Name is required.\";\n    if (!formData.email?.trim()) newErrors.email = \"Email is required.\";\n    else if (formData.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) newErrors.email = \"Email is invalid.\";\n    if (formData.age && isNaN(parseInt(formData.age))) newErrors.age = \"Age must be a number.\";\n    else if (formData.age && parseInt(formData.age) < 0) newErrors.age = \"Age cannot be negative.\";\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!validateForm()) {\n      toast({ variant: \"destructive\", title: \"Validation Error\", description: \"Please correct the errors in the form.\"});\n      return;\n    }\n    \n    setIsSubmitting(true);\n    let finalXrayImageUrls = [...(formData.xrayImageUrls || [])];\n\n    if (selectedFiles.length > 0) {\n      setIsUploading(true);\n      const uploadedUrls: string[] = [];\n      let uploadOk = true;\n      try {\n        for (const file of selectedFiles) {\n          const fileData = new FormData();\n          fileData.append('imageFile', file);\n          const response = await fetch('/api/upload/image', { method: 'POST', body: fileData });\n          const result = await response.json();\n          if (!response.ok) throw new Error(result.message || `File upload failed for ${file.name}`);\n          uploadedUrls.push(result.imageUrl);\n        }\n        finalXrayImageUrls = [...finalXrayImageUrls, ...uploadedUrls];\n        setSelectedFiles([]);\n        toast({ title: \"Files Uploaded\", description: `${uploadedUrls.length} new file(s) have been successfully uploaded and attached.` });\n      } catch (error: any) {\n        toast({ variant: \"destructive\", title: \"Upload Error\", description: error.message });\n        uploadOk = false;\n      } finally {\n        setIsUploading(false);\n      }\n      if (!uploadOk) {\n        setIsSubmitting(false);\n        return;\n      }\n    }\n\n    const patientDataToSubmit = {\n      ...formData,\n      age: formData.age ? parseInt(formData.age, 10) : undefined,\n      allergySpecifics: formData.hasAllergy ? formData.allergySpecifics : undefined,\n      xrayImageUrls: finalXrayImageUrls,\n    };\n    if (patientDataToSubmit.dateOfBirth === '') delete patientDataToSubmit.dateOfBirth;\n\n\n    try {\n      const response = await fetch(`/api/patients/${patientId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(patientDataToSubmit),\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || data.errors?.email?.[0] || \"Failed to update patient\");\n\n      toast({ title: \"Patient Updated!\", description: `${data.name}'s details have been successfully updated.` });\n      router.push(`/doctor/patients/${patientId}`); \n    } catch (err: any) {\n      toast({ variant: \"destructive\", title: \"Error Updating Patient\", description: err.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  if (isLoadingData) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n      </div>\n    );\n  }\n\n\n  return (\n    <div className=\"space-y-6 mb-12\">\n      <Card className=\"w-full max-w-2xl mx-auto shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl\">Edit Patient: {formData.name || 'Loading...'}</CardTitle>\n          <CardDescription>Update the patient's details and medical information.</CardDescription>\n        </CardHeader>\n        <form onSubmit={handleSubmit}>\n          <CardContent className=\"space-y-6\">\n            {/* Basic Info */}\n            <div className=\"grid sm:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">Full Name</Label>\n                <Input id=\"name\" name=\"name\" value={formData.name || ''} onChange={handleChange} />\n                {errors.name && <p className=\"text-sm text-destructive\">{errors.name}</p>}\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input id=\"email\" name=\"email\" type=\"email\" value={formData.email || ''} onChange={handleChange} />\n                {errors.email && <p className=\"text-sm text-destructive\">{errors.email}</p>}\n              </div>\n            </div>\n            <div className=\"grid sm:grid-cols-3 gap-4\"> {/* Changed to 3 cols for better DOB layout */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"phone\">Phone Number</Label>\n                <Input id=\"phone\" name=\"phone\" type=\"tel\" value={formData.phone || ''} onChange={handleChange} />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"dateOfBirth\">Date of Birth</Label>\n                <Input id=\"dateOfBirth\" name=\"dateOfBirth\" type=\"date\" value={formData.dateOfBirth || ''} onChange={handleChange} />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"age\">Age</Label>\n                <Input id=\"age\" name=\"age\" type=\"number\" value={formData.age || ''} onChange={handleChange} />\n                {errors.age && <p className=\"text-sm text-destructive\">{errors.age}</p>}\n              </div>\n            </div>\n\n            {/* Medical Records */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"medicalRecords\">Simple Medical Records / Notes</Label>\n              <Textarea id=\"medicalRecords\" name=\"medicalRecords\" value={formData.medicalRecords || ''} onChange={handleChange} rows={3} />\n            </div>\n\n            {/* Medical Conditions */}\n            <div className=\"space-y-4\">\n              <Label className=\"font-semibold\">Medical Conditions:</Label>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-3\">\n                {[\n                  { id: 'hasDiabetes', label: 'Diabetes', icon: <HeartPulse className=\"h-4 w-4 mr-2\" /> },\n                  { id: 'hasHighBloodPressure', label: 'High Blood Pressure', icon: <ShieldAlert className=\"h-4 w-4 mr-2\" /> },\n                  { id: 'hasStrokeOrHeartAttackHistory', label: 'History of Stroke/Heart Attack', icon: <HeartPulse className=\"h-4 w-4 mr-2\" /> },\n                  { id: 'hasBleedingDisorders', label: 'Bleeding Disorders', icon: <Droplets className=\"h-4 w-4 mr-2\" /> },\n                  { id: 'hasAllergy', label: 'Allergy', icon: <Info className=\"h-4 w-4 mr-2\" /> },\n                  { id: 'hasAsthma', label: 'Asthma/Respiratory Issues', icon: <Wind className=\"h-4 w-4 mr-2\" /> },\n                ].map(condition => (\n                  <div key={condition.id} className=\"flex items-center space-x-2\">\n                    <Checkbox \n                      id={condition.id} \n                      name={condition.id}\n                      checked={!!formData[condition.id as keyof FormData]} \n                      onCheckedChange={(checked) => {\n                        const isChecked = typeof checked === 'boolean' ? checked : false;\n                        setFormData(prev => ({ ...prev, [condition.id]: isChecked }));\n                        if (condition.id === 'hasAllergy' && !isChecked) {\n                            setFormData(prev => ({ ...prev, allergySpecifics: '' }));\n                        }\n                      }}\n                    />\n                    <Label htmlFor={condition.id} className=\"flex items-center cursor-pointer text-sm\">\n                        {condition.icon} {condition.label}\n                    </Label>\n                  </div>\n                ))}\n              </div>\n              {formData.hasAllergy && (\n                <div className=\"space-y-1 pl-6\">\n                  <Label htmlFor=\"allergySpecifics\">Allergy Specifics</Label>\n                  <Input id=\"allergySpecifics\" name=\"allergySpecifics\" value={formData.allergySpecifics || ''} onChange={handleChange} placeholder=\"e.g., Penicillin, Latex\" />\n                </div>\n              )}\n            </div>\n\n            {/* X-ray Images */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"xrayImagesInputEdit\">X-ray Images or PDFs (Optional)</Label>\n               <Input \n                id=\"xrayImagesInputEdit\"\n                type=\"file\" \n                multiple \n                onChange={handleFileChange} \n                className=\"hidden\"\n                ref={xrayInputRef}\n                accept=\"image/jpeg,image/png,image/webp,image/gif,application/pdf\" \n              />\n              <Button type=\"button\" variant=\"outline\" onClick={() => xrayInputRef.current?.click()}>\n                <Plus className=\"h-4 w-4\" /> Add Files\n              </Button>\n\n              {selectedFiles.length > 0 && (\n                <div className=\"mt-2 space-y-1\">\n                  <p className=\"text-xs text-muted-foreground\">Selected files to upload ({selectedFiles.length}):</p>\n                  <div className=\"flex flex-wrap gap-2 mt-1\">\n                    {selectedFiles.map((file, index) => (\n                       <div key={index} className=\"relative group w-20 h-20 rounded border p-1 flex items-center justify-center\">\n                        {file.type.startsWith('image/') ? (\n                            <Image src={URL.createObjectURL(file)} alt={file.name} layout=\"fill\" objectFit=\"contain\" className=\"rounded\" data-ai-hint=\"medical scan document\"/>\n                        ) : (\n                            <FileText className=\"h-10 w-10 text-muted-foreground\" />\n                        )}\n                        <Button\n                          type=\"button\"\n                          variant=\"destructive\"\n                          size=\"icon\"\n                          className=\"absolute -top-2 -right-2 h-5 w-5 opacity-0 group-hover:opacity-100 transition-opacity z-10\"\n                          onClick={() => removeSelectedFile(index)}\n                          aria-label=\"Remove selected file\"\n                        >\n                          <Trash2 className=\"h-3 w-3\" />\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n              \n              {(formData.xrayImageUrls?.length || 0) > 0 && (\n                <div className=\"mt-2 space-y-1\">\n                  <p className=\"text-xs text-muted-foreground\">Current attachments:</p>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {formData.xrayImageUrls?.map((url, index) => (\n                      <div key={index} className=\"relative h-20 w-20 rounded border group p-1 flex items-center justify-center\">\n                        {url.toLowerCase().endsWith('.pdf') ? (\n                            <FileText className=\"h-10 w-10 text-destructive\" />\n                        ) : (\n                            <Image src={url} alt={`Uploaded file ${index + 1}`} layout=\"fill\" objectFit=\"contain\" className=\"rounded\" data-ai-hint=\"medical scan document\"/>\n                        )}\n                        <Button\n                            type=\"button\"\n                            variant=\"destructive\"\n                            size=\"icon\"\n                            className=\"absolute top-0 right-0 h-5 w-5 opacity-0 group-hover:opacity-100 transition-opacity z-10\"\n                            onClick={() => removeUploadedImage(url)}\n                            aria-label=\"Remove file\"\n                        >\n                            <Trash2 className=\"h-3 w-3\" />\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex flex-col sm:flex-row justify-between items-center gap-3 pt-4\">\n            <Button \n              variant=\"outline\" \n              type=\"button\" \n              onClick={() => router.push(`/doctor/patients/${patientId}`)}\n              disabled={isSubmitting || isUploading}\n            >\n              Cancel\n            </Button>\n            <Button className=\"w-full sm:w-auto\" type=\"submit\" disabled={isSubmitting || isUploading}>\n              {isSubmitting || isUploading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Save className=\"mr-2 h-4 w-4\" />}\n              Save Changes\n            </Button>\n          </CardFooter>\n        </form>\n      </Card>\n    </div>\n  );\n}\n    \n"],"names":[],"mappings":"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","debugId":null}}]
}