var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var i18n_exports = {};
__export(i18n_exports, {
  addTranslation: () => addTranslation,
  setLanguage: () => setLanguage,
  t: () => t
});
module.exports = __toCommonJS(i18n_exports);
var import_en = require("../lang/en.js");
var _a, _b;
const translationsLanguages = {
  en: import_en.En
};
let currentLanguage = ((_b = (_a = globalThis.navigator) == null ? void 0 : _a.language) == null ? void 0 : _b.split("-")[0]) || "en";
const setLanguage = (langCode) => {
  currentLanguage = langCode;
};
const addTranslation = (langCode, languageDictionary) => {
  translationsLanguages[langCode] = languageDictionary;
};
const t = (key, variables = {}) => {
  var _a2;
  const result = ((_a2 = translationsLanguages[currentLanguage]) == null ? void 0 : _a2[key]) || import_en.En[key];
  return result.replace(
    /\{(\w+)\}/g,
    (_, varName) => variables[varName] !== void 0 ? String(variables[varName]) : `{${varName}}`
  );
};
